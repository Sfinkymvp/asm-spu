:NEW_ITERATION           // Если пользователь ввел число > 0, то программа работает заново
IN                       // Номер нужного члена последовательности фиббоначи
POP RCX
PUSH RCX
PUSH 0
JA :IF_ABOVE1            // Если номер члена <= 0, то программа прекращает работу
HLT
:IF_ABOVE1
PUSH 0
POP RAX
PUSH 1                   // Добавление первых членов последовательности 0 и 1
POP RBX
CALL :FIBONACCI
PUSH RBX                 // Вывод n-ного члена последовательности Фиббоначи
OUT
JMP :NEW_ITERATION
:FIBONACCI
PUSH RCX
PUSH 1
JA :IF_ABOVE2
RET                      // Если n <= 1, то происходит базовый случай
:IF_ABOVE2               // Иначе выполняется рекурсия fib(n - 1) + fib(n - 2)
PUSH RAX
PUSH RBX
ADD
POP RDX                  // Считает сумму RDX = RAX + RBX
PUSH RCX
PUSH 1
SUB       
POP RCX                  // Значение регистра RAX уменьшается на 1
CALL :SWAP
CALL :FIBONACCI          // Рекурсивно вызывается заново
:SWAP                    // Меняет числа в регистрах местами
PUSH RBX  
POP RAX                  // RAX = RBX
PUSH RDX
POP RBX                  // RBX = RDX(временная переменная)
RET
